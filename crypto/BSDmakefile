#
# OpenSSL/crypto/BSDmakefile
#

.include "crypto/Makefile"
.for d in $(SRC_crypto:.c=.d)
.sinclude "$(d)"
.endfor

.for dir in $(SDIRS)
fips_objs_$(dir):
	@cd $(dir) && echo making fips in $(DIR_crypto)/$(dir)... && \
	$(MAKE) -e TOP=../.. DIR=$(dir) INCLUDES_crypto_$(dir)='$(INCLUDES_crypto)' \
	`FIPS_EX_OBJ="$(FIPS_EX_OBJ)"\
	AES_ENC="$(AES_ENC)"\
	BN_ASM="$(BN_ASM)"\
	DES_ENC="$(DES_ENC)"\
	SHA1_ASM_OBJ="$(SHA1_ASM_OBJ)"\
	MODES_ASM_OBJ="$(MODES_ASM_OBJ)"\
	$(PERL) $(TOP_crypto)/../util/fipsobj.pl $(dir)`

fips: fips_objs_$(dir)
.endfor

# There is a reason for this CRYPTO_SUBDIRS_TARGET and CRYPTO_LIBS_TARGET
# madness. See the BUGS section of the BSD make man page.
CRYPTO_TARGETS= subdirs files links libs install lint clean dclean
CRYPTO_SUBDIRS_TARGET= subdirs
CRYPTO_LIBS_TARGET = libs
.for target in $(CRYPTO_TARGETS)

.if $(CRYPTO_SUBDIRS_TARGET) == $(target)
CRYPTO_$(target)= all
.elif $(CRYPTO_LIBS_TARGET) == $(target)
CRYPTO_$(target)= lib
.else
CRYPTO_$(target)= $(target)
.endif

.for dir in $(SDIRS)
$(target)_crypto_$(dir):
	@cd $(dir) && echo "making $(CRYPTO_$(target)) in crypto/$(dir)..." && \
	$(MAKE) -e TOP=../.. DIR=$(dir) INCLUDES_crypto_$(dir)='$(INCLUDES_crypto)' \
	$(CRYPTO_$(target))

$(target): $(target)_crypto_$(dir)
.endfor
.endfor
